import os
from splunk.rest import simpleRequest, format
from splunk.util import normalizeBoolean

def _get_web_feature(session_key, feature_name, failure_message_format):
    (response, data) = simpleRequest(
        path='/servicesNS/nobody/system/web-features/{}'.format(feature_name),
        sessionKey=session_key,
        raiseAllErrors=True
    )
    if response.status == 200:
        parsed_data = format.parseFeedDocument(data)
        attributes = parsed_data.toPrimitive()[feature_name]
        normalized_attributes = {key: normalizeBoolean(value) for key, value in attributes.items()}
        return normalized_attributes
    else:
        raise Exception(failure_message_format.format(response.status))

def get_highcharts_accessibility_settings(session_key=None):
    return _get_web_feature(session_key, 'feature:highcharts_accessibility',
                                        'Failed to get highcharts accessibility settings with status code {}')


def get_splunk_web_optimizations_settings(session_key=None):
    return _get_web_feature(session_key, 'feature:splunk_web_optimizations', 'Failed to get splunk web optimizations settings')